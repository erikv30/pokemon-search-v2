{"version":3,"sources":["actions/pokemonActions.js","Pages/PokemonList.js","Pages/Pokemon.js","App.js","reducers/PokemonListReducer.js","reducers/PokemonMultipleReducer.js","reducers/RootReducer.js","Store.js","index.js"],"names":["GetPokemonList","page","dispatch","a","type","offset","axios","get","res","payload","data","PokemonList","props","useState","search","setSearch","useDispatch","pokemonList","useSelector","state","React","useEffect","FetchData","className","onChange","e","target","value","placeholder","onClick","history","push","loading","_","isEmpty","errorMsg","map","el","to","name","pageCount","Math","ceil","count","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeClassName","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemon","pokemonName","match","params","pokemon","pokemonState","pokeData","id","types","style","backgroundColor","color","padding","borderRadius","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","stats","stat","base_stat","abilities","ability","ShowData","App","path","exact","component","DefaultState","PokemonListReducer","action","results","PokemonMultipleReducer","RootReducer","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.389e7ad3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const GetPokemonList = (page) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: 'POKEMON_LIST_LOADING'\r\n        })\r\n        \r\n        const perPage = 20\r\n        const offset = (page * perPage) - perPage  \r\n\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${perPage}&offset=${offset}`)\r\n\r\n        dispatch({\r\n            type: 'POKEMON_LIST_SUCCESS',\r\n            payload: res.data\r\n        })\r\n    } catch (e) {\r\n        dispatch({\r\n            type: 'POKEMON_LIST_FAIL'\r\n        })\r\n    }\r\n}\r\n\r\nexport const GetPokemon = (pokemon) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: 'POKEMON_MULTIPLE_LOADING'\r\n        })\r\n        \r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n\r\n        dispatch({\r\n            type: 'POKEMON_MULTIPLE_SUCCESS',\r\n            payload: res.data,\r\n            pokemonName: pokemon\r\n        })\r\n    } catch (e) {\r\n        dispatch({\r\n            type: 'POKEMON_MULTIPLE_FAIL'\r\n        })\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport {GetPokemonList} from '../actions/pokemonActions'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst PokemonList = (props) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const pokemonList = useSelector(state => state.PokemonList)\r\n    React.useEffect(() => {\r\n        FetchData(1)\r\n    }, [])\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    const ShowData = () => {\r\n        if(pokemonList.loading) {\r\n            return(\r\n                <div className='message'>\r\n                    <p>Loading...</p>\r\n                </div>\r\n            ) \r\n        }\r\n        \r\n        if(!_.isEmpty(pokemonList.data)) {\r\n            return(\r\n                <section className='cards'>\r\n                    {pokemonList.data.map(el => {\r\n                return(\r\n                    <div key={el.name} className='card'>\r\n                        <Link to={`/pokemon/${el.name}`}>\r\n                            <h1>{el.name}</h1>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n                </section>\r\n            ) \r\n        }\r\n\r\n        if(pokemonList.errorMsg !== \"\") {\r\n            return(\r\n                <div className='message'>\r\n                    <p>{pokemonList.errorMsg}</p>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        return(\r\n            <div className='message'>\r\n                <p>unable to get data</p>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='search-wrap'>\r\n                <input type=\"text\" onChange={e => setSearch(e.target.value)} placeholder='Example: cyndaquil or 155' />\r\n                <button onClick={() => props.history.push(`/pokemon/${search}`)}>Search</button>\r\n            </div>\r\n            {ShowData()}\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate \r\n                    pageCount={Math.ceil(pokemonList.count / 20)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={(data) => FetchData(data.selected + 1)}\r\n                    containerClassName='pagination'\r\n                    pageLinkClassName='pages'\r\n                    previousLinkClassName='prev'\r\n                    nextLinkClassName='next'\r\n                    activeClassName='active-page'\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GetPokemon } from '../actions/pokemonActions'\r\nimport _ from 'lodash'\r\n\r\nconst TYPE_COLORS = {\r\n    bug: 'B1C12E',\r\n    dark: '4F3A2D',\r\n    dragon: '755EDF',\r\n    electric: 'FCBC17',\r\n    fairy: 'F4B1F4',\r\n    fighting: '823551D',\r\n    fire: 'E73B0C',\r\n    flying: 'A3B3F7',\r\n    ghost: '6060B2',\r\n    grass: '74C236',\r\n    ground: 'D3B357',\r\n    ice: 'A3E7FD',\r\n    normal: 'C8C4BC',\r\n    poison: '934594',\r\n    psychic: 'ED4882',\r\n    rock: 'B9A156',\r\n    steel: 'B5B5C3',\r\n    water: '3295F6'\r\n  };\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n\r\n    const ShowData = () => {\r\n        if(!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return(\r\n                <section className='glass'>\r\n                    <div className='header-poke'>\r\n                    <h2 className='name'>{pokeData.name}</h2>\r\n                    <span className='number'>N.° {pokeData.id}</span>\r\n                    </div>\r\n                    <div className=\"type\">\r\n                        {pokeData.types.map(type => (\r\n                            <span key={type.type.name} style={{backgroundColor: `#${TYPE_COLORS[type.type.name]}`, color: '#ffffff', padding: '10px 15px', borderRadius: '20px'}}>{type.type.name}</span>\r\n                        ))}\r\n                    </div>\r\n                    <div className='pictures'>\r\n                        <div className='row'>\r\n                            <img src={pokeData.sprites.front_default} alt=\"imgFront\"/>\r\n                            <img src={pokeData.sprites.back_default} alt=\"imgShinyF\"/>                   \r\n                        </div>\r\n                        <div className='row'>\r\n                            <img src={pokeData.sprites.front_shiny} alt=\"imgBack\"/>\r\n                            <img src={pokeData.sprites.back_shiny} alt=\"imgShinyB\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='description'>\r\n                        <div id='left' className='item'>\r\n                            <h1>Stats</h1>\r\n                            {pokeData.stats.map(el => {\r\n                                return(\r\n                                    <div key={el.stat.name} className='col-1'>\r\n                                    <p>{el.stat.name}:</p>\r\n                                    <span>{el.base_stat}</span>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='item'>\r\n                            <h1>Abilities</h1>\r\n                            {pokeData.abilities.map(el => {\r\n                                return(\r\n                                    <div key={el.ability.name} className='col-2'>\r\n                                    <p>{el.ability.name}</p>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n        }\r\n\r\n        if(pokemonState.loading) {\r\n            return(\r\n                <div className='message'>\r\n                    <p>Loading...</p>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        if(pokemonState.errorMsg !== \"\") {\r\n            return(\r\n                <div className='message'>\r\n                    <p>{pokemonState.errorMsg}</p>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        return(\r\n            <div className='message'>\r\n                <p>error getting pokemon</p>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    return (\r\n        <div className='info'>\r\n            {ShowData()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon","import './App.css';\nimport {Switch, Route, NavLink, Redirect} from 'react-router-dom'\nimport PokemonList from './Pages/PokemonList';\nimport Pokemon from './Pages/Pokemon';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <nav>\n        <NavLink to={'/'}>PokéDex</NavLink>\n      </nav>\n     <Switch>\n       <Route path={'/'} exact component={PokemonList} />\n       <Route path={'/pokemon/:pokemon'} exact component={Pokemon} />\n       <Redirect to={'/'} />\n     </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    errorMsg:\"\",\r\n    count: 0\r\n}\r\n\r\nconst PokemonListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'POKEMON_LIST_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMsg:\"\"\r\n            }\r\n        case 'POKEMON_LIST_FAIL':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: 'unable to get pokemon'\r\n            }\r\n        case 'POKEMON_LIST_SUCCESS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload.results,\r\n                errorMsg:\"\",\r\n                count: action.payload.count\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default PokemonListReducer","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg:\"\"\r\n}\r\n\r\nconst PokemonMultipleReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'POKEMON_MULTIPLE_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMsg: \"\"\r\n            }\r\n        case 'POKEMON_MULTIPLE_FAIL':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"unable to find pokemon\"\r\n            }\r\n        case 'POKEMON_MULTIPLE_SUCCESS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"\",\r\n                data: {\r\n                    ...state.data,\r\n                    [action.pokemonName]: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default PokemonMultipleReducer\r\n","import {combineReducers} from 'redux'\r\nimport PokemonListReducer from './PokemonListReducer'\r\nimport PokemonMultipleReducer from './PokemonMultipleReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    PokemonList: PokemonListReducer,\r\n    Pokemon: PokemonMultipleReducer\r\n})\r\n\r\nexport default RootReducer","import {createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport RootReducer from './reducers/RootReducer'\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport Store from './Store';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}